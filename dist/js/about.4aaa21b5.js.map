{"version":3,"sources":["webpack:///./src/views/Snake.vue?a775","webpack:///./src/views/Snake.vue?61ce","webpack:///./src/views/Snake.vue"],"names":["_hoisted_1","id","render","_ctx","_cache","x","y","next","this","xPos","yPos","createArr","arr","Array","i","j","square","context","colour","fillStyle","fillRect","stroke","drawSnek","input","newApple","Math","floor","random","iterate","node","tempX","tempY","mounted","canvas","document","querySelector","getContext","width","height","up","move","down","left","right","snek","dir","intervalID","setInterval","length","shift","addEventListener","e","code","push","temp","clearInterval","alert","__exports__"],"mappings":"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","file":"js/about.4aaa21b5.js","sourcesContent":["import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"snek\" }\n\nexport function render(_ctx: any,_cache: any) {\n  return (_openBlock(), _createElementBlock(\"canvas\", _hoisted_1))\n}","\nimport {Options, Vue} from 'vue-class-component'\n\nclass snekNode{\n    next:snekNode|null = null\n    xPos:number\n    yPos:number\n    /**\n     * Constructor for snekNode\n     * @param x x position for new node\n     * @param y y position for new node\n     */\n    constructor(x:number, y:number){\n        this.xPos = x\n        this.yPos = y\n    }\n}\n\n/**\n * @returns 30x30 array filled with 0\n */\nconst createArr = ():number[][] => {\n    let arr:number[][] = new Array(30);\n    let i = 0\n    while(i < 30){\n        arr[i] = new Array(30);\n        let j = 0\n        while(j < 30){\n            arr[i][j] = 0\n            j++\n        }\n        i++\n    }\n    return arr\n}\n\n/**\n * Void function that paints a square to the canvas\n * @param context Rendering context that will be used to draw\n * @param colour Colour of the square (0 = black, 1 = green, 2 = red)\n * @param x x Position in the grid\n * @param y y position in the grid\n */\nconst square = (arr:number[][]) => (context:CanvasRenderingContext2D) => (colour:number) => (x:number) => (y:number):void => {\n    if(colour === 0){\n        context.fillStyle = \"#000000\"\n    }else if(colour === 1){\n        context.fillStyle = \"#00FF00\"\n    }else if(colour === 2){\n        context.fillStyle = \"#FF0000\"\n    }\n    arr[y][x] = colour\n    context.fillRect(x * 20 , y * 20, 20, 20)\n    context.stroke()\n}\n\n/**\n * Void function that draws the whole snake recursively\n * @param arr The array of values\n * @param context The context that is being used to draw\n * @param input The current node of the snake list\n */\nconst drawSnek = (arr:number[][]) => (context:CanvasRenderingContext2D) => (input:snekNode):void =>{\n    square(arr)(context)(1)(input.xPos)(input.yPos)\n    if(input.next){\n        drawSnek(arr)(context)(input.next)\n    }\n}\n\n/**\n * Void function that generates a new newApple\n * @param arr state array of the game\n * @param context Context which will be used to draw the new apple\n */\nconst newApple = (arr:number[][]) => (context:CanvasRenderingContext2D):void => {\n    let x\n    let y\n    do{\n        x = Math.floor(Math.random() * 30)\n        y = Math.floor(Math.random() * 30)\n    }while(arr[y][x] !== 0)\n    square(arr)(context)(2)(x)(y)\n}\n\n/**\n * Void function that refreshes the state of the game recursively\n * @param arr State array of the game\n * @param context Context that will be used to draw \n * @param node current node of the snake list\n * @param x xPosition\n * @param y yPosition\n */\nconst iterate = (arr:number[][]) => (context:CanvasRenderingContext2D) => (node:snekNode) => (x:number) => (y:number):void => {\n    if(node.next){\n        const tempX = node.xPos\n        const tempY = node.yPos\n        node.xPos = x\n        node.yPos = y\n        iterate(arr)(context)(node.next)(tempX)(tempY)\n    }else{\n        square(arr)(context)(0)(node.xPos)(node.yPos)\n        node.xPos = x\n        node.yPos = y\n    }\n}\n\n\n@Options({\n    mounted(){\n        const canvas = <HTMLCanvasElement>document.querySelector('#snek')\n        const context = <CanvasRenderingContext2D>canvas.getContext('2d')\n        canvas.width = 600\n        canvas.height = 600\n        context.fillRect(0, 0, 600, 600)\n        context.stroke()\n        \n        const up = (arr:number[][]) => (node:snekNode):void => move(arr)(context)(node)(node.xPos)(node.yPos - 1)\n        const down = (arr:number[][]) => (node:snekNode):void => move(arr)(context)(node)(node.xPos)(node.yPos + 1)\n        const left = (arr:number[][]) => (node:snekNode):void => move(arr)(context)(node)(node.xPos - 1)(node.yPos)\n        const right = (arr:number[][]) => (node:snekNode):void => move(arr)(context)(node)(node.xPos + 1)(node.yPos)\n\n        const arr = createArr()\n        const snek = new snekNode(7, 15)\n        snek.next = new snekNode(6, 15)\n        snek.next.next = new snekNode(5, 15)\n        snek.next.next.next = new snekNode(4, 15)\n        drawSnek(arr)(context)(snek)\n        newApple(arr)(context)\n        \n        const dir = [right]\n        const intervalID = setInterval(() => {\n            dir[0](arr)(snek)\n            if(dir.length > 1){\n                dir.shift()\n            }\n        }, 100)\n    \n        document.addEventListener(\"keypress\", (e) => {\n            if(e.code === \"KeyW\"){\n                if(dir[0] !== down){\n                    dir.push(up)\n                }\n            }else if(e.code === \"KeyS\"){\n                if(dir[0] !== up){\n                    dir.push(down)\n                }\n            }else if(e.code === \"KeyA\"){\n                if(dir[0] !== right){\n                    dir.push(left)\n                }\n            }else if(e.code === \"KeyD\"){\n                if(dir[0] !== left){\n                    dir.push(right)\n                }\n            }e\n        })\n        const move = (arr:number[][]) => (context:CanvasRenderingContext2D) => (node:snekNode) => (x:number) => (y:number):void =>{\n            if(0 <= x && x < 30 && 0 <= y && y < 30){\n                if(!arr[y][x]){\n                    square(arr)(context)(1)(x)(y)\n                    iterate(arr)(context)(node)(x)(y)\n                }else if(arr[y][x] === 2){\n                    square(arr)(context)(1)(x)(y)\n                    const temp = snek.next\n                    snek.next = new snekNode(snek.xPos, snek.yPos)\n                    snek.next.next = temp\n                    snek.xPos = x\n                    snek.yPos = y\n                    newApple(arr)(context)\n                }else if(arr[y][x] === 1){\n                    clearInterval(intervalID)\n                    alert(\"Ouchie, you bit yourself and lost ):\")\n                }\n            }else{\n                clearInterval(intervalID)\n                alert(\"You lost :(\")\n            }\n        }\n    }\n})\n\nexport default class Home extends Vue {}\n","import { render } from \"./Snake.vue?vue&type=template&id=4b346af6&ts=true\"\nimport script from \"./Snake.vue?vue&type=script&lang=ts\"\nexport * from \"./Snake.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/ianpineda/projects/ian_website_frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}